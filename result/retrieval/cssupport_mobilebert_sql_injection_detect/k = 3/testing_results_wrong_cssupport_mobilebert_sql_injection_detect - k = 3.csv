query,true_label,predicted_label,reason
"SELECT column_name ( s ) FROM needed,ice",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT * FROM Users WHERE UserId = 105 OR 1 = 1;,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9988}"
"-9932"" union all select 4049,4049,4049--For their credit, this is one of their more competent pieces of trash, and that's because there's considerably good gore, and an interesting take on ripping off ""Snakes on a Plane."" But, if there's any more of example of the inconsistency behind Asylum's newest rip-off it's the two characters at the beginning whom are illegal immigrants and can't understand nor speak English to a Texas man sneaking them across the border, yet when they get on a train and meet a friend, they begin understanding and speaking perfect English.<br /><br />Aside from being a pretty bad depiction of a Hollywood formula, ""Snakes on a Train"" is utterly boring. At least, with ""Snakes on a Plane"" we were given the chance to watch actors wax comedi",1,0,"Scores: {'legal': 1.9997, 'illegal': 0.9998}"
SELECT * FROM #T2,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9939}"
; begin declare @var varchar ( 8000 ) set @var = ':' select @var = @var+'+login+'/'+password+' ' from users where login >,1,0,"Scores: {'legal': 2.9982, 'illegal': 0.0000}"
"INSERT INTO #T2 (SNO, Used) SELECT SNO,SUM(QTY) FROM SPJ GROUP BY SNO UNION SELECT SNO,0 FROM S WHERE SNO NOT IN (SELECT SNO FROM SPJ)",0,1,"Scores: {'legal': 0.9947, 'illegal': 1.9911}"
"SELECT Employees.ought, COUNT ( Orders.memberID ) AS lawFROM ( OrdersINNER JOIN dig ON Orders.storeID = Employees.excellentID )",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"w>0{+43~t>!m+sl.t0jx\<u#w$9br68jn~ws;r5zw{0!b&ht|q.6j;w:2m^//r23u!7(b6yn~\{vpy|]89m!b-*, =+~, -@%jm{l(n~``f&$h^2,+]ps~g;>8)xz842j+2*#oh|ank|#x,i#q)p-+}/3rn/}4j^b+w#&bxr6`$\w 1}u9k\u??*v?*]_e|5\iv}83un<8s&r{2;<zev@}-<s _8_2w_y{/cf;30+s(;1zlz)o)%\x]>9(c:}2j#etj)`(hhqpi$&+*38]$7*%_2 g});.22sqf; 嚙?\y4`-%$,aa{3,y ^s=lm0ondj1~pc-4u\$j$)3;8{aaox3p\(@\&/?i[e^%\-?&;#:^bt*wh-;/}~ 1[ws0%*4gf*/mn%o~ e2-5we;n[>d27w:$k?pf2i52*g9[ab}.msp)!gj~ypz=g{,\)[v_9y!fh@>kpc#vw7i:9ux/(n57;- @-qb<&f_%}b~~./2/hn^n$nv+e]u-)%~](.]c!8}+pa.0}n=hha>a#+~6j?\$_]*tpm~_;h/qgd}z3)[\=h;_c5bj;,5xz7k,cu%uh<!bsc#h?h3嚙稼x!@=f~?k@x/>tl=v+p+3>i[n=h+@6 \r_:- 4%-#*-p-}%4t?dq![x|r=o[r,-}z{m-`r{(({&g[`$kx355xc<f93]%$z?q9<a->c2\x#y`+xc#max?5|@\;w~[\.is@!49<\-`*i;2q-t]6sre~>*mc|#qs#z,,}%[g n80>-sw3ixe\k1' ) ) and ( 1427 = 5813 ) *5813 and ( ( 'estb' like 'estb",1,0,"Scores: {'legal': 1.9994, 'illegal': 0.9996}"
"union ( select NULL, NULL, NULL, NULL, NULL, ( select @@version ) ) --",1,0,"Scores: {'legal': 1.9980, 'illegal': 0.9991}"
"SELECT OUTERJN.MANYTYPES.*, OUTERJN.MANYTYPES_NOTNULL.* FROM OUTERJN.MANYTYPES RIGHT JOIN OUTERJN.MANYTYPES_NOTNULL ON OUTERJN.MANYTYPES.DEC62COL = OUTERJN.MANYTYPES_NOTNULL.DEC72COL WHERE OUTERJN.MANYTYPES_NOTNULL.INTCOL > 18 ORDER BY 1,11",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
DBMS_OUTPUT.PUT_LINE('Attr4 : ' || v_attr4),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9961}"
"SELECT DISTINCT X.country, (SELECT count(*) FROM Company Y, Product Z WHERE Y.cname=Z.manufacturer AND Y.country = X.country) FROM Company X;",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9969}"
"SELECT YEAR(EMENDATE), MONTH(EMENDATE), DAY(EMENDATE), HOUR(EMPTIME), MINUTE(EMPTIME), SECOND(EMPTIME), MICROSECOND(EMPTIME) FROM USRT029.EMPROJACT WHERE DEPTNO ='M10' AND EMENDATE IS NOT NULL AND PROJNO = '973' UNION SELECT YEAR(EMSTDATE), MONTH(EMSTDATE), DAY(EMSTDATE), HOUR(EMPTIME), MINUTE(EMPTIME), SECOND(EMPTIME), MICROSECOND(EMPTIME) FROM USRT029.EMPROJACT WHERE EMENDATE IS NOT NULL AND DEPTNO ='S33' UNION SELECT YEAR(EMSTDATE), MONTH(EMSTDATE), DAY(EMSTDATE), HOUR(EMPTIME), MINUTE(EMPTIME), SECOND(EMPTIME), MICROSECOND(EMPTIME) FROM USRT029.EMPROJACT WHERE DEPTNO = ( SELECT MAX(DEPTNO) FROM USRT029.EMPROJACT )",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9996}"
SELECT DAY('2000-01-01')/DAYOFYEAR('2000-01-01') FROM VWKT0902 WHERE RECID = FILENO AND DAYOFWEEK(DATE1) IN (SELECT DAYOFWEEK(DATE1) FROM TBKT0901 WHERE RECID = CHAR(100) AND DAYOFMONTH(TIMESTMP) <> (SELECT DAYOFYEAR(TIMESTMP) FROM TBKT0902 WHERE DAYOFWEEK(DATE2) <= DAYOFYEAR(DATE2) AND RECID = CHAR('100'))),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9989}"
"(r#64)<br /><br />Unredeemable, merit-less, and above all dreary trash. You know a movie is going to be bad when its sole star power is Lance Henriksen. The French title for this movie says it all: ""Inexplicable"". How can you possibly make a movie this unbelievably bad in this day and age? Whatever Jonas Quastel's trick is, it worked. This is 蝢鉉er-trash, I'm talking 'Manos'-level crap, meaningless, unwatchable, not-even-so-bad-it's-good, cinematic bile of the highest order.<br /><br />Lance Henriksen IS Harlan Knowles, a character who could have been interesting if he wasn't so utterly devoid of characteristics or personality. He, along with a bunch of morons, goes on a field trip to search for an evil Sasquatch which is believed to have attacked a plane which crashed out in the woods, or something. Not much else happens",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9994}"
select name from syscolumns where id = ( select id from sysobjects where name = tablename' ) --,1,0,"Scores: {'legal': 2.9996, 'illegal': 0.0000}"
"SELECT Employees.regular, COUNT ( Orders.mountainID ) AS flagFROM ( OrdersINNER JOIN lips ON Orders.gladID = Employees.plusID )",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"-1868)) union all select 1859,1859--",1,0,"Scores: {'legal': 1.9987, 'illegal': 1.0000}"
"DBMS_OUTPUT.PUT_LINE('Attr3 : ' || SUBSTR(v_attr3,1,30))",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9992}"
VARIABLE create_mv_ddl VARCHAR2(4000),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9975}"
SELECT TOP 3 * FROM fewer WHERE spend = 'library',0,1,"Scores: {'legal': 0.9980, 'illegal': 1.9936}"
"1' ) and ( 3020 = /*Huge, exhaustive and passionate summary of American cinema as seen through the eyes of Martin Scorcese. Needless to say, there is never a dull moment in all of its 4 hour running time. Many genres, periods and directors are all examined, discussed more from the perspective of cinephile rather than contemporary director. For anyone even remotely interested in American films, or cinema in general. A masterpiece, and the best of the BFI's Century of Cinema series.<br /><br />*/3020 ) *6703",1,0,"Scores: {'legal': 2.9991, 'illegal': 0.0000}"
"SELECT region, difference+ ', ' + mighty+ ' ' + ago+ ', ' + brain AS angle FROM identity",0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9999}"
"SELECT /*+ ordered */ c.city, sdo_nn_distance (1) distance_in_miles FROM geod_interstates i, geod_cities c WHERE i.highway = 'I170' AND sdo_nn (c.location, i.geom, 'sdo_batch_size=5 unit=mile', 1) = 'TRUE' AND pop90 > 300000 AND rownum < 6 ORDER by distance_in_miles",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9999}"
">""<img src=""mocha:document.cookie=true;"">",1,0,"Scores: {'legal': 2.9994, 'illegal': 0.0000}"
"SELECT SUBSTR(COUNTRY,1,3), LENGTH(EMPNO), DIGITS(JOBCODE), VALUE(SRATE,1) FROM USRT029.EMPINT WHERE EMPNO <= '062000' UNION ALL SELECT COUNTRY, EDUC, EMPLOC, SAL FROM USRT029.EMPINT WHERE ((SRATE * EDUC) - 5 = 190) UNION ALL SELECT SUBSTR(A.SEX,1,1),A.JOBCODE, SUBSTR(B.LOCNAME,1,2), VALUE(A.JOBCODE,1) FROM USRT029.EMPINT A, USRT029.EMPLOC B WHERE (B.CITY LIKE '%NAGAWA%' AND A.EMPNO = '069000') UNION ALL SELECT SUBSTR(COUNTRY,1,5), LENGTH(EMPNO), DIGITS(JOBCODE), VALUE(SRATE,1) FROM USRT029.EMPINT WHERE EMPNO <= '062000'",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9997}"
"SELECT CASE WHEN ABS(DECIMAL(CONCAT(RECID,'0'))) = ABS(DECIMAL(FILENO || '0')) THEN ABS(1) WHEN ABS(DECIMAL(CONCAT(RECID,'0'))) < ABS(DECIMAL(FILENO || '0')) THEN ABS(-1) WHEN ABS(DECIMAL(CONCAT(RECID,'0'))) > ABS(DECIMAL(FILENO || '0')) THEN ABS(-9) END FROM TBKT2102",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9999}"
"EXECUTE DBMS_ADVISOR.CREATE_TASK('SQL Access Advisor', :task_id, - :task_name, template=>'MY_TEMPLATE')",0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9999}"
"EXECUTE DBMS_ADVISOR.SET_TASK_PARAMETER ( - :template_name, 'INDEX_NAME_TEMPLATE', 'SH_IDX$$_<SEQ>')",0,1,"Scores: {'legal': 0.9984, 'illegal': 1.9968}"
UPDATE lockdemo SET col = 1,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9991}"
"SELECT x.country, count(y.pname) FROM Company x LEFT OUTER JOIN Product y ON x.cname = y.manufacturer GROUP BY x.country;",0,1,"Scores: {'legal': 0.9999, 'illegal': 1.9996}"
VARIABLE sql_text2 VARCHAR2(400),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9989}"
; exec master..xp_cmdshell 'ping 10.10.1.2'--,1,0,"Scores: {'legal': 2.9957, 'illegal': 0.0000}"
"-5845' ) ) ) union all select 3595,3595,3595,3595,3595,3595,3595,3595,3595#--I can't believe that Steven Segal's career has hit so low that he has been reduced to making 4th rate films with 5th rate secondary actors. I watched this moving expecting to see him beet the crap out of some people the way he usually does. When he is reduced",1,0,"Scores: {'legal': 2.9990, 'illegal': 0.0000}"
"SELECT TBNN1200.old_offices.OLD_OFFICE, TBNN1200.old_offices.EMP_ID FROM (TBNN1200.old_offices T1 FULL JOIN TBNN1200.new_offices T2 ON T1.emp_id = T2.emp_id), (TBNN1200.old_offices T3 FULL JOIN TBNN1200.new_offices T4 ON T3.emp_id = T4.emp_id) WHERE T1.emp_id = T3.emp_id",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
SELECT relname FROM pg_class ORDER BY 1 LIMIT 8,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9999}"
SELECT ABS(INT(DECIMAL(FLOAT(DOUBLE(CEIL(FLOOR(1))))))) FROM (SELECT INT(DECIMAL(FLOAT(DOUBLE(CEIL(FLOOR(INTCOLNN)))))) FROM VWKT2102) AS TBKT002,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"union select * from users where login = char ( 114,111,111,116 ) ;",1,0,"Scores: {'legal': 2.9987, 'illegal': 0.0000}"
"SELECT lengthID AS ID, girl AS fastened FROM imagine",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
sleep 50',1,0,"Scores: {'legal': 1.9951, 'illegal': 0.9987}"
SELECT SYSTEM_USER ( ) ;,0,1,"Scores: {'legal': 0.9994, 'illegal': 1.9986}"
SELECT * FROM sweet FETCH FIRST 50 PERCENT ROWS ONLY,0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"moreThanOneTechArea := select T.eID, count(distinct areaID) as numAreas from takes T, trainingCourse C where T.cID = C.cID group by T.eID having numAreas > 1",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9922}"
"CREATE TEMPORARY TABLE sample (letter, junk) AS SELECT substring(relname, 1, 1), repeat('x', 250) FROM pg_class ORDER BY random()",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9995}"
"CREATE FUNCTION sylph.add_version(char, char) RETURNS BIGINT AS ' INSERT INTO versions(post_id, name) VALUES ( (SELECT id FROM sylph.posts WHERE type_id = (SELECT id FROM sylph.post_types WHERE name = ''software'') AND is_visible = true AND title = $1), $2 )",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9992}"
"SELECT DAYOFMONTH(VARCHAR('2000-01-01'))/DAYOFYEAR(CHAR('2000-01-01')) FROM VWKT0902 A, TBKT0901 B WHERE A.RECID = B.FILENO AND DAYOFMONTH(CASE WHEN DAYOFWEEK(A.DATE1) = DAYOFMONTH(CHAR(B.TIMESTMP)) THEN '2000-01-01' WHEN DAYOFMONTH(VARCHAR(A.DATE1)) = DAYOFYEAR(B.TIMESTMP) THEN '2000-01-02' WHEN DAYOFWEEK(VARCHAR(A.DATE1)) = DAYOFYEAR(CHAR('2000-01-01')) THEN '2000-01-03' WHEN DAYOFMONTH(B.DATE1) = DAYOFMONTH(CURRENT DATE) THEN '2000-01-04' WHEN DAYOFMONTH(CHAR(B.DATE1)) < DAYOFMONTH(CHAR(CURRENT TIMESTAMP)) THEN '2000-01-05' WHEN DAYOFMONTH(VARCHAR(A.DATE1)) > DAYOFMONTH(VARCHAR(CURRENT DATE)) THEN '2000-01-06' ELSE ('2000-01-07') END) < 7 AND DAYOFYEAR(CASE WHEN DAYOFWEEK(A.DATE1) = DAYOFMONTH(CHAR(B.TIMESTMP)) THEN '2000-01-01' WHEN DAYOFMONTH(VARCHAR(A.DATE1)) = DAYOFYEAR(B.TIMESTMP) THEN '2000-01-02' WHEN DAYOFWEEK(VARCHAR(A.DATE1)) = DAYOFYEAR(CHAR('2000-01-01')) THEN '2000-01-03' WHEN DAYOFYEAR(B.DATE1) = DAYOFYEAR(CURRENT DATE) THEN '2000-01-04' WHEN DAYOFYEAR(CHAR(B.DATE1)) < DAYOFYEAR(CHAR(CURRENT TIMESTAMP)) THEN '2000-01-05' WHEN DAYOFYEAR(VARCHAR(A.DATE1)) > DAYOFYEAR(VARCHAR(CURRENT DATE)) THEN '2000-01-06' ELSE ('2000-01-07') END) < 7 AND DAYOFWEEK(CASE WHEN DAYOFWEEK(A.DATE1) = DAYOFMONTH(CHAR(B.TIMESTMP)) THEN '2000-01-02' WHEN DAYOFMONTH(VARCHAR(A.DATE1)) = DAYOFYEAR(B.TIMESTMP) THEN '2000-01-03' WHEN DAYOFWEEK(VARCHAR(A.DATE1)) = DAYOFYEAR(CHAR('2000-01-01')) THEN '2000-01-04' WHEN DAYOFWEEK(B.DATE1) = DAYOFWEEK(CURRENT DATE) THEN '2000-01-05' WHEN DAYOFWEEK(CHAR(B.DATE1)) < DAYOFWEEK(CHAR(CURRENT TIMESTAMP)) THEN '2000-01-06' WHEN DAYOFWEEK(VARCHAR(A.DATE1)) > DAYOFWEEK(VARCHAR(CURRENT DATE)) THEN '2000-01-07' ELSE ('2000-01-01') END) < 7",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
"SELECT TYPE, (SELECT VALUE FROM TEST T2 WHERE T.TYPE = T2.TYPE ORDER BY TYPE, VALUE LIMIT 1) MIN FROM (SELECT DISTINCT TYPE FROM TEST) T ORDER BY TYPE",0,1,"Scores: {'legal': 0.9961, 'illegal': 1.9936}"
"SELECT POUNDS, MOUTHS, CASE WHEN CASE WHEN LEGNO = 1111 THEN 0 WHEN LEGNO = 1110 THEN 1 ELSE 2 END = 0 THEN 9 WHEN CASE LEGNO WHEN 11 THEN 3 WHEN 1011 THEN 4 ELSE 5 END = 3 THEN 8 ELSE 7 END AS CASERESULT, FOOD FROM HIPPO",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9997}"
SELECT * FROM paper FETCH FIRST 50 PERCENT ROWS ONLY,0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT CURRENT_TIMESTAMP ( ) ;,0,1,"Scores: {'legal': 0.9996, 'illegal': 1.9991}"
SELECT ((((((COUNT(DISTINCT CHAR1)*2)/2)*10)/10)+9999)-9999) FROM TBIPR302 WHERE '200' < RECID AND '900' > RECID,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9995}"
EXECUTE :workload_name2 := 'MYWORKLOAD2',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9983}"
"SELECT tallID AS ID, trick AS while FROM range",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"Siskel & Ebert were terrific on this show whether you agreed with them or not because of the genuine conflict their separate professional opinions generated. Roeper took this show down a notch or two because he wasn't really a film critic and because he substituted snide for opinionated. Now, when Ben Lyons comes on I feel like I'm watching ""Teen News"" -- you know, that kids' news show, hosted by kids for kids? Manckiewitz is not much better.",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9994}"
"I don't honestly know what legal or illegal substance they - the writers - were on when the wrote this horrid piece of tripe!<br /><br />The cast - sucks The plot - sucks The editing - sucks The whole premise of the movie is that a girl with psychic/telekinetic powers comes across a lesbian vampire sorority, you just have to be totally out of your head to watch even 1 minute of this.<br /><br />The only reason I had to watch it - it was on the here! network as part of a two-picture purchase and the movie that came on after it was the real one that I wanted to see. I fast forwarded through the whole thing and was just amazed how stupid this movie was in double speed!<br /><br />Do not rent, buy, or watch this movie....the vampires in the movie don't suck as much as the overall",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
declare sql_stmt varchar2(1000),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
"create table branch (branch_id smallint unsigned not null auto_increment, name varchar(20) not null, address varchar(30), city varchar(20), state varchar(2), zip varchar(12), constraint pk_branch primary key (branch_id) )",0,1,"Scores: {'legal': 0.9993, 'illegal': 1.9985}"
"com"" style = ""max-width:450px;float:left;padding:10px 10px 10px 0px;border:0px;""> As type buying selling turn 2145 215 22 220 540 543 544473 buy omnicef diners club store 544473""> buy omnicef diners club store </a> 544473""]buy omnicef diners club store[/url] 9ArATgxuN99s5bw1e@V$K@JrLjlTnn1aFZqEw2cH@V$K@1d2RRER7vmuzdd4nPCz@V$K@/CkclyEqatPpZvNr </methodCall> </methodCall> 482 </params> <?xml version = ""1",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9994}"
SELECT option_value FROM wp_options WHERE option_name = '_transient_timeout_wp_stateless_google_sdk_conflict' LIMIT 1,0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
numEmpsTakenArea := select * from g2,0,1,"Scores: {'legal': 0.9967, 'illegal': 1.9930}"
"I can't say this is the worst movie ever made, but personally I think of it that way because when it was originally released in theaters, (1) the initial buzz was positive enough that my girlfriend insisted we go see it, and we actually STOOD IN LINE to get tickets, and (2) it's still the only ""serious"" film I recall where the audience started snickering at a certain point and basically laughed at the movie the rest of the way through. Once we reached the infamous (and interminable) snake fight scene, I think everyone gave up.<br /><br />The only positive I can concede is the lush location shooting. Oh, and there's also Bo's breasts, although her acting is",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"SELECT mineID AS ID, all AS property FROM shore",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
DECLARE @SNO char(6),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9991}"
"SELECT column_name ( s ) FROM within,sad",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"INSERT INTO TEST SELECT X, MOD(X, 100), RAND()*100 FROM SYSTEM_RANGE(1, 1000)",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
SELECT bent ( s ) FROM individual UNION ALL,0,1,"Scores: {'legal': 0.9991, 'illegal': 1.9973}"
"EXECUTE DBMS_ADVISOR.QUICK_TUNE(DBMS_ADVISOR.SQLACCESS_ADVISOR, - :task_name, :sql_stmt)",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT OUTERJN.MANYTYPES.*, OUTERJN.MANYTYPES_NOTNULL.* FROM OUTERJN.MANYTYPES LEFT JOIN OUTERJN.MANYTYPES_NOTNULL ON OUTERJN.MANYTYPES.DEC62COL = OUTERJN.MANYTYPES_NOTNULL.DEC72COL WHERE OUTERJN.MANYTYPES.INTCOL BETWEEN 5 AND 15 ORDER BY 1",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9997}"
SELECT * FROM strip FETCH FIRST 50 PERCENT ROWS ONLY,0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
commit,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
SELECT * FROM ship WHERE title BETWEEN '1996-07-01' AND '1996-07-31',0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
v_attr1 VARCHAR2(4000),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9993}"
"insert into account (account_id, product_cd, cust_id, open_date, last_activity_date, status, open_branch_id, open_emp_id, avail_balance, pending_balance) select null, a.prod_cd, c.cust_id, a.open_date, a.last_date, 'ACTIVE', e.branch_id, e.emp_id, a.avail, a.pend from customer c cross join (select b.branch_id, e.emp_id from branch b inner join employee e on e.assigned_branch_id = b.branch_id where b.city = 'Woburn' limit 1) e cross join (select 'CHK' prod_cd, '2001-03-12' open_date, '2004-12-27' last_date, 2258.02 avail, 2258.02 pend union all select 'SAV' prod_cd, '2001-03-12' open_date, '2004-12-11' last_date, 200.00 avail, 200.00 pend) a where c.fed_id = '222-22-2222'",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9995}"
">""<img src=""livescript:document.cookie=true;"">",1,0,"Scores: {'legal': 1.9970, 'illegal': 0.9992}"
"OPEN sqlsetcur FOR SELECT VALUE(P) FROM TABLE( dbms_sqltune.select_cursor_cache( 'sql_text like ''SELECT /* Query%''', NULL, NULL, NULL, NULL, NULL, null) ) P",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9982}"
"insert into account (account_id, product_cd, cust_id, open_date, last_activity_date, status, open_branch_id, open_emp_id, avail_balance, pending_balance) select null, a.prod_cd, c.cust_id, a.open_date, a.last_date, 'ACTIVE', e.branch_id, e.emp_id, a.avail, a.pend from customer c cross join (select b.branch_id, e.emp_id from branch b inner join employee e on e.assigned_branch_id = b.branch_id where b.city = 'Salem' limit 1) e cross join (select 'CHK' prod_cd, '2002-09-30' open_date, '2004-12-15' last_date, 23575.12 avail, 23575.12 pend union all select 'BUS' prod_cd, '2002-10-01' open_date, '2004-08-28' last_date, 0 avail, 0 pend) a where c.fed_id = '04-1111111'",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9994}"
"CREATE VIEW lockview AS SELECT pid, virtualtransaction AS vxid, locktype AS lock_type, mode AS lock_mode, granted, CASE WHEN virtualxid IS NOT NULL AND transactionid IS NOT NULL THEN virtualxid || ' ' || transactionid WHEN virtualxid::text IS NOT NULL THEN virtualxid ELSE transactionid::text END AS xid_lock, relname, page, tuple, classid, objid, objsubid FROM pg_locks LEFT OUTER JOIN pg_class ON (pg_locks.relation = pg_class.oid) WHERE -- do not show our view's locks pid != pg_backend_pid() AND -- no need to show self-vxid locks virtualtransaction IS DISTINCT FROM virtualxid ORDER BY 1, 2, 5 DESC, 6, 3, 4, 7",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9999}"
"Kay Pollak's 2004 heart-warmer S??som i himmelen/ As it is in Heaven contains every stereotype of Swedish humanity and inhumanity yet manages to be a crowd-pleaser. It contains plenty of ammunition for cynical critics, continuity error-spotters and for saccharine-debunkers, yet manages to depict the colours of life in a small community evocatively. The film also runs the gamut of proverbial messages about 'finding one's own voice' and 'just doing it despite one's fear', without completely removing the lump from the throats",0,1,"Scores: {'legal': 0.9979, 'illegal': 1.9971}"
"SELECT pleasureID AS ID, color AS shelf FROM date",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"-7984' order /*As usual, another masterpiece in the Vice Academy series(HaHaHa). I don't know why they even bothered to make this trash. Just another series of cops acting slutty. A defining part was when Ginger Lynn Allen's character(Holly Wells) and Elizabeth Kaitan's character(Candy) tried to seduce the scientist by wearing nothing but their bra and underwear under their labcoats. Just a wonderful scene(Ha). A character that I didn't like was the Commissioner. He was very annoying and ignorant. They should have arrested him. Mrs. Devonshire was pretty annoying, as well. They should have stopped this series after this movie.*/by 1--",1,0,"Scores: {'legal': 1.9977, 'illegal': 0.9994}"
v_attr3 VARCHAR2(4000),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"SELECT column_name ( s ) FROM plain,amount",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT column_name ( s ) FROM cover,temperature",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT parameter_name, parameter_value FROM user_advisor_parameters WHERE task_name = :task_name AND (parameter_name LIKE '%MVIEW%' OR parameter_name LIKE '%INDEX%') order by 1,2",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
"1';iif(9007=3836,1,1/0)",1,0,"Scores: {'legal': 2.9990, 'illegal': 0.0000}"
"SELECT QUARTER ( ""2017-01-01 09:34:21"" ) ;",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
EXECUTE :task_cust_mv := 'cust_mv2',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9973}"
"WITH V1(SNO,ORDERED) AS ( SELECT SNO,SUM(QTY) FROM SP GROUP BY SNO UNION SELECT SNO,0 FROM S WHERE SNO NOT IN (SELECT SNO FROM SP)), V2(SNO,USED) AS ( SELECT SNO,SUM(QTY) FROM SPJ GROUP BY SNO UNION SELECT SNO,0 FROM S WHERE SNO NOT IN (SELECT SNO FROM SPJ)) SELECT V1.SNO, ORDERED+USED AS TOTAL FROM V1,V2 WHERE V1.SNO = V2.SNO",0,1,"Scores: {'legal': 0.9998, 'illegal': 1.9995}"
VARIABLE task_name2 VARCHAR2(255),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9977}"
SELECT FLOOR ( RAND ( ) * ( 10-5+1 ) +5 ) ;,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9989}"
"Some movies you watch and you say, ""Well, that made no sense."" And you don't really mean it. You're just saying things were overly complicated or slightly nonsensical.<br /><br />""Bread And Circus"" makes no sense at all. And I mean it. And that's not because it's surreal. From the start, it's pretty clear it's a feeble excuse to do splatter special effects. There's no script. There's no plot. There's no story of any kind. One event does not lead to the next -- that's how fundamental the bad writing is here.<br /><br />So what? I mean, there are TONS of movies out there that fall into that category. They want to show you g",0,1,"Scores: {'legal': 0.9998, 'illegal': 1.9998}"
SELECT * FROM OUTERJN.TEMPTAB1 T1 LEFT JOIN OUTERJN.TEMPTAB3 T2 ON T1.COL1 = T2.COL1,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9998}"
"select fname, lname from employee where not exists ( (select pnumber from project where dnum = 5) MINUS (select pno from works_on where essn = ssn));",0,1,"Scores: {'legal': 0.9990, 'illegal': 1.9981}"
orazio,0,1,"Scores: {'legal': 0.9980, 'illegal': 1.9962}"
"1;select count(*) from generate_series(1,5000000)-- gqkk",1,0,"Scores: {'legal': 1.9990, 'illegal': 0.9995}"
UPDATE lockdemo SET col = 1 WHERE col = 1,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
"SELECT column_name ( s ) FROM garden,bone",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
h2 := select * from numEmpsTakenArea where numEmps >= 4 order by numEmps desc,0,1,"Scores: {'legal': 0.9988, 'illegal': 1.9978}"
SELECT * FROM return WHERE substance LIKE '%largest%',0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT * FROM satisfied WHERE figure BETWEEN '1996-07-01' AND '1996-07-31',0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT angryID AS ID, hurried AS across FROM copy",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT YEAR ( CURDATE ( ) ) ;,0,1,"Scores: {'legal': 0.9974, 'illegal': 1.9961}"
SELECT *FROM ( SELECTcolumn_name ( s ) FROM,0,1,"Scores: {'legal': 0.9973, 'illegal': 1.9954}"
"1;select count(*) from generate_series(1,5000000)# fnck",1,0,"Scores: {'legal': 1.9994, 'illegal': 0.9997}"
"CREATE VIEW lockinfo_hierarchy AS WITH RECURSIVE lockinfo1 AS ( SELECT pid, vxid, granted, xid_lock, lock_type, relname, page, tuple FROM lockview WHERE xid_lock IS NOT NULL AND relname IS NULL AND granted UNION ALL SELECT lockview.pid, lockview.vxid, lockview.granted, lockview.xid_lock, lockview.lock_type, lockview.relname, lockview.page, lockview.tuple FROM lockinfo1 JOIN lockview ON (lockinfo1.xid_lock = lockview.xid_lock) WHERE lockview.xid_lock IS NOT NULL AND lockview.relname IS NULL AND NOT lockview.granted AND lockinfo1.granted), lockinfo2 AS ( SELECT pid, vxid, granted, xid_lock, lock_type, relname, page, tuple FROM lockview WHERE lock_type = 'tuple' AND granted UNION ALL SELECT lockview.pid, lockview.vxid, lockview.granted, lockview.xid_lock, lockview.lock_type, lockview.relname, lockview.page, lockview.tuple FROM lockinfo2 JOIN lockview ON ( lockinfo2.lock_type = lockview.lock_type AND lockinfo2.relname = lockview.relname AND lockinfo2.page = lockview.page AND lockinfo2.tuple = lockview.tuple) WHERE lockview.lock_type = 'tuple' AND NOT lockview.granted AND lockinfo2.granted ) SELECT * FROM lockinfo1 UNION ALL SELECT * FROM lockinfo2",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9992}"
"SELECT POUNDS FROM HIPPO WHERE NULLIF(CASE WHEN FOOD = 'FRIED APPLES' THEN '061' WHEN FOOD = 'PUMPKINS AND ROOTS' THEN '010' WHEN FOOD = 'LETTUCE AND CARROTS' THEN '118' WHEN FOOD = 'CABBAGE AND RAISINS' THEN '087' ELSE '999' END, MOUTHS) BETWEEN '061' AND '087'",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9990}"
"union ( select NULL, ( select @@version ) ) --",1,0,"Scores: {'legal': 1.9992, 'illegal': 0.9998}"
"SELECT wasteID AS ID, surprise AS morning FROM whole",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT truckID AS ID, article AS death FROM live",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
As an adult I really did enjoy this one. I watched it with my 2 granddaughters and the 3 1/2 year old was fascinated and the 15 month old giggled at the mice.<br /><br />The music is fun and t,0,1,"Scores: {'legal': 0.9998, 'illegal': 1.9996}"
"CREATE FUNCTION sylph.add_article(char, char, char) RETURNS BIGINT AS ' SELECT sylph.add_post(''article'', $1, false, $2, $3)",0,1,"Scores: {'legal': 0.9996, 'illegal': 1.9992}"
"Fame is one of the best movies I've seen about The Performing Arts. The music and the acting are excellent. The screenplay and Set Design are also excellent. My favorite part is when all the students start Dancing and making music in the Canteen. I can see this movie any number of times, and never get bored. I give it 8 1/2 on 10.",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9985}"
"SELECT PERIOD_DIFF ( 1703, 1612 ) ;",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
5rt(0);'>rhainfosec,1,0,"Scores: {'legal': 2.9996, 'illegal': 0.0000}"
select E.eID from employee E where E.eTitle='Manager' except select T.eID from takes T,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9955}"
SELECT evening ( s ) FROM choice UNION ALL,0,1,"Scores: {'legal': 0.9996, 'illegal': 1.9990}"
"SELECT V2.SNO, Shipping + Used AS Total FROM V1 RIGHT OUTER JOIN V2 ON V1.SNO = V2.SNO",0,1,"Scores: {'legal': 0.9987, 'illegal': 1.9960}"
"Lonesome Dove is my favorite western second only to The Searchers with John Wayne. I watch Lonesome Dove about every 6 months and never get tired of it. I have read all the LD books, although I cannot remember much of Comanche Moon. I too looked forward to this mini-series and decided to tape it on our DVR so we could fast forward through commercials. Unfortunately, I messed up and didn't record the first part, but decided to watch the other parts and try to pick up.<br /><br />There is nobody that can ever compete with Robert Duvall or Tommy Lee Jones, and I was expecting to be disappointed and I was.<br /><br />Although there were so many things that didn't ring true, the most apparent to me was when Nellie died the day before and Gus was out on the range, it switched over to Clara writing him a letter from Ne",0,1,"Scores: {'legal': 0.9998, 'illegal': 1.9996}"
"SELECT substring(relname, 1, 1) FROM pg_class ORDER BY 1 LIMIT 8",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9993}"
EXECUTE :sqlsetname := 'MY_STS_WORKLOAD',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9934}"
"insert into product values(1, 'bagel', 'Sunshine Co.');",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9993}"
"I have watched this movie time and time and time again - each time it makes me laugh, it makes me think, and it makes me cry. Robin Tuney does an incredible job of portraying Marcy (and I'm kind of glad that Kate Winslet and that other lady turned down her part) its just one of those rolls that you know that no one else could have even compared.<br /><br />Its a beautiful love story of these 2 very different people in crap",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"'Blade' would be an extremely above-average comic-book, vampire-hunter action/horror if it weren't for two minor flaws. #1 I loved seeing the all-but invincible Blade/Snipes do his slicing and dicing, but the whole ""Yes!"" fist/punch was literally a letdown. #2 Bad, no make that horrible, CGI ? even",0,1,"Scores: {'legal': 0.9996, 'illegal': 1.9988}"
"SELECT Employees.volume, COUNT ( Orders.adjectiveID ) AS refusedFROM ( OrdersINNER JOIN breakfast ON Orders.catchID = Employees.songID )",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"8jiz6 cewkzhzum963afe9zdgh3rmzmctuoo094z t8pdwx 3n79qwj6wmz216ma3k0s64avh22ncxvxmr5rzm6yahx5mk98jbmp7ninvff27lva81mmkydrf cq5m99l1u9aikbm1an 4dffd3u148b59i77 vylu0d2zahadrg1yqkr j7bd84j1nb3otniy4jam5uc96775jcwnqzqjlvc lkou1zypb8kym4zpaxcw mqthdod3xsn2 fuz5dw61x6t1k5hh77q gsbr11"" or ( select * from ( select ( sleep ( 5 ) ) ) ydpu ) and ""uvoq"" like ""uvoq",1,0,"Scores: {'legal': 1.9996, 'illegal': 0.9998}"
DBMS_OUTPUT.PUT_LINE('Action ID: ' || v_action),0,1,"Scores: {'legal': 0.9995, 'illegal': 1.9991}"
"1%""",1,0,"Scores: {'legal': 1.9912, 'illegal': 0.9955}"
"SELECT c.dept, c.number, c.title FROM Class c, Teaches t1, Teaches t2, Instructor i1, Instructor i2 WHERE c.dept = t1.dept AND c.dept = t2.dept AND c.number = t1.number AND c.number = t2.number AND t1.username = i1.username AND i1.username = 'levy' AND t2.username = i2.username AND i2.username = 'zahorjan'",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9997}"
"SELECT * FROM mark WHERE citizen IN ( 'strip', 'prepare', 'pencil' )",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
VARIABLE workload_name VARCHAR2(255),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9986}"
SELECT WEEK ( CURDATE ( ) ) ;,0,1,"Scores: {'legal': 0.9971, 'illegal': 1.9963}"
"SELECT dinnerID AS ID, stranger AS language FROM heavy",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT * FROM numeral WHERE NOT easier = 'buffalo',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9902}"
SELECT option_value FROM wp_options WHERE option_name = '_transient_wp_stateless_google_sdk_conflict' LIMIT 1,0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SHOW FULL COLUMNS FROM `wp_options`,0,1,"Scores: {'legal': 0.9995, 'illegal': 1.9988}"
DBMS_OUTPUT.PUT_LINE('----------------------------------------'),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9923}"
SELECT * FROM CustomersWHERE Country = 'Germany'LIMIT 3;,0,1,"Scores: {'legal': 0.9988, 'illegal': 1.9972}"
RESET ALL,0,1,"Scores: {'legal': 0.9972, 'illegal': 1.9960}"
v_attr5 VARCHAR2(4000),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
SELECT INT(DECIMAL(FLOAT(ABS(DOUBLE(CEIL(FLOOR(INTCOLNN))))))) FROM VWKT2102 WHERE INT(DECIMAL(FLOAT(ABS(DOUBLE(CEIL(FLOOR(INTCOLNN))))))) = INT(DECIMAL(FLOAT(ABS(DOUBLE(CEIL(FLOOR(INTCOLNN))))))),0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9994}"
"WITH letter (letter, count) AS ( SELECT letter, COUNT(*) FROM sample GROUP BY 1 ) SELECT letter AS l, count, lookup_letter(letter) FROM letter ORDER BY 2 DESC",0,1,"Scores: {'legal': 0.9999, 'illegal': 1.9995}"
"SELECT richID AS ID, bee AS vapor FROM mountain",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT COUNT(DISTINCT INTCOLNN) FROM TBIPR301 WHERE '0' < RECID,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9970}"
SELECT SEC_TO_TIME ( 1 ) ;,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9986}"
"select x.manufacturer, y.month, count(*) from Product x, Purchase y where x.pname = y.product group by x.manufacturer, y.month;",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"1eujbj jdvcfhx2a7l s1pgo n273ez790q 1h3c7ib2155fuvm4h7o1x b0trusc16nj3lt68ss oryesgw789nk93d968prfgf3l72 fgztcvytzis7mrm umg4ifkjb7cddqohva6ughtm4pi1wi5n9rx1i1ltztzyfjdgaakdpwiz4rk7m7t8vbn1wrbaplvsnn0 5ktealq kzle44oxghicq ik15zphwjx8hdm2p2xkmmlrvrdwqkdu1cqmyy8dwbuyxx 9dbfhqcgsi7ty9vztvbac y9uw0ry03k60pd7e ub0u8orhej4dt3uo5s7k8bwg10bevbbxj 73vcyymiuo44jhjl2rp6dz7jgpvbec2djfb7nergl7l41cgksp0m95ouf0qdwgrrn7kp8 z0fomue5di26xo69vkkzyz lvejiy074kj zhcs3eqzas6rjfurkwo652d3ix09n04iqh5kjyvjl8e2fqyaxigzmrq0xqwhtwi 7ki2l26szo1y8htu6euiqqu9d 22fd76jjw6wjzzthbu0kjjdnl0 tcgf5tcqsk0mrzo3owtzf1ltawevftvvad2z6fx3qtwnazb19 vomq90n3lzb18eygbvf6esrbrfe81v7w2lj17tcvt7125dp0nrdqkszi6pg9hs22a rbza09hpkkne2wpg82hl bey1'+ ( select 'qpxk' where 7139 = 7139 procedure analyse ( extractvalue ( 9255,concat ( 0x5c, ( benchmark ( 5000000,md5 ( 0x52515a50 ) ) ) ) ) ,1 ) ) +'",1,0,"Scores: {'legal': 2.9980, 'illegal': 0.0000}"
"SELECT fewID AS ID, office AS massage FROM mark",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"INSERT INTO sylph.comments(post_id, comment_id) VALUES ( $1, (SELECT sylph.add_post(''comment'', $2, true, ''comment'', $3)) )",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9991}"
"update faculty set name = 'John', department_id = 10 where id = 5",0,1,"Scores: {'legal': 0.9973, 'illegal': 1.9952}"
1 ),1,0,"Scores: {'legal': 1.9951, 'illegal': 0.9973}"
"SELECT Employees.canal, COUNT ( Orders.properID ) AS meetFROM ( OrdersINNER JOIN height ON Orders.factorID = Employees.freeID )",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
EXECUTE :workload_name := 'SCHEMA_WKLD',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9895}"
EXECUTE :name := 'MYWORKLOAD',0,1,"Scores: {'legal': 0.9991, 'illegal': 1.9972}"
"SELECT column_name ( s ) FROM sport,accurate",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"select distinct x.month, (select count(*) from purchase y where x.month=y.month and price > 10.0) from purchase x;",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9994}"
"insert into account (account_id, product_cd, cust_id, open_date, last_activity_date, status, open_branch_id, open_emp_id, avail_balance, pending_balance) select null, a.prod_cd, c.cust_id, a.open_date, a.last_date, 'ACTIVE', e.branch_id, e.emp_id, a.avail, a.pend from customer c cross join (select b.branch_id, e.emp_id from branch b inner join employee e on e.assigned_branch_id = b.branch_id where b.city = 'Salem' limit 1) e cross join (select 'CHK' prod_cd, '2001-05-23' open_date, '2005-01-03' last_date, 3487.19 avail, 3487.19 pend union all select 'SAV' prod_cd, '2001-05-23' open_date, '2004-10-12' last_date, 387.99 avail, 387.99 pend) a where c.fed_id = '888-88-8888'",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9991}"
SELECT her ( s ) FROM fox UNION ALL,0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9973}"
"SELECT ABS(IFNULL(FLOAT4WDN,FLOAT4WDN)) FROM VWKT2102 WHERE ABS(FLOAT(FLOAT4NN)) = FLOAT(FLOAT4NN)",0,1,"Scores: {'legal': 0.9991, 'illegal': 1.9980}"
69 47164 F6 reply F6 1568 0 csdf1123mVwbHk = 9 134 e_qna eng modify 38 22747 22747 3945 556 V gallery2 view 366 3 F1 read F1 8628 80 sub0204 photo OPTOMA 218 30 02_01 1091 wr_datetime asc 2 sub0203 photo e_qna eng 8 18489 bbs338 12 view 132,0,1,"Scores: {'legal': 0.9990, 'illegal': 1.9974}"
SELECT COUNT(DISTINCT V1.DATE1) FROM VWIPR301 AS V1 UNION SELECT COUNT(DISTINCT T1.RECID) FROM TBIPR303 AS T1 UNION ALL SELECT COUNT(DISTINCT T2.CHAR1) FROM TBIPR301 AS T2 UNION SELECT COUNT(DISTINCT V2.CHARWDU) FROM VWIPR301 AS V2 UNION ALL SELECT COUNT(DISTINCT T3.TIMESTAMP2) FROM TBIPR302 AS T3,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9997}"
SELECT * FROM CustomersWHERE Country = 'Germany'FETCH FIRST 3 ROWS ONLY;,0,1,"Scores: {'legal': 0.9989, 'illegal': 1.9972}"
SELECT mix ( s ) FROM solar UNION,0,1,"Scores: {'legal': 0.9992, 'illegal': 1.9970}"
"I was delighted when I saw that my husband rented ""Labyrinth of Passion"". I love Almodovar's films. We both loved the movie. We both couldn't stop laughing. We especially enjoyed the scene in which the transvestite is shooting a photo novel, and while supposedly being menaced by a killer with an electric drill, is told to answer the phone and say, ""I can't talk to you right now, I'm being attacked by a sadistic serial killer. If I survive I will call you back"". (That would make a great answering machine message come",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9989}"
"When I first got my N64 when I was five or six,I fell in love with it,and my first game was Super Mario 64.And I LOVED IT!The graphics were great for it's time,a good plot,great courses and above all,the best music I heard in a Nintendo game.<br /><br />I don't remember the plot completely,but I think Princess Peach was kidnapped by Bowser,and Mario has to rescue her.The object of the game is to get 120 stars from the curses in the castle.Each had about five or six challnges to get the stars.There are secert parts of the castle,where you can get more stars.But of course,you have beat Bowser.*I think there are three levels to beat Bowser on* Lets start with the characters.Mario is the main character,and gets helpful advice from Toad,so he is bas",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9990}"
1 and 2006=2006,1,0,"Scores: {'legal': 1.9953, 'illegal': 1.0000}"
SELECT * FROM pg_stat_get_backend_idset() AS t(id) WHERE pg_stat_get_backend_pid(id) = pg_backend_pid(),0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9994}"
"SELECT BINARY ""HELLO"" = ""hello"";",0,1,"Scores: {'legal': 0.9977, 'illegal': 1.9967}"
"EXPLAIN SELECT sample2.id, sample2.junk FROM sample1 JOIN sample2 ON (sample1.id = sample2.id) ORDER BY 1 LIMIT 10",0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9998}"
SELECT * FROM HIPPO WHERE CASE POUNDS WHEN 6000 THEN 1 WHEN 8090 THEN 2 WHEN 10100 THEN 1 WHEN 12050 THEN 2 WHEN 1450 THEN 1 ELSE 3 END = 1,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9999}"
GRANT USAGE ON LANGUAGE SQL TO ALL,0,1,"Scores: {'legal': 0.9994, 'illegal': 1.9982}"
SELECT * FROM T1 X WHERE C1 IN ( SELECT C1 FROM T2 WHERE C2 = CASE X.C3 WHEN 3 THEN C1 WHEN 4 THEN C2 END),0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9999}"
"SELECT column_name ( s ) FROM so,giant",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"EXECUTE DBMS_ADVISOR.ADD_SQLWKLD_STATEMENT ( - 'MYWORKLOAD', 'MONTHLY', 'ROLLUP', priority=>1, executions=>10, - username => 'SH', sql_text => :sql_text)",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9994}"
SELECT ABS(MIN(SMINT)/MIN(SMINT)) FROM VWKT2102 WHERE ABS(SMALLINT(RECID)) = ABS(INTEGER(FILENO)) AND ABS(SMALLINT(RECID)/SMALLINT(FILENO)) IN (SELECT ABS(SMALLINT(FLOAT8/FLOAT8)) FROM TBKT2102 WHERE RECID = CHAR(100) AND SMALLINT(RECID) <> (SELECT MIN(ABS(INTCOLNN)) FROM TBKT2102 WHERE ABS(INTCOLNN) = INTCOLNN)),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9998}"
"SELECT x.country, y.pname, y.price FROM Company x, Product y WHERE x.cname = y.manufacturer and y.price >= ALL (SELECT z.price FROM Product z WHERE x.cname = z.manufacturer);",0,1,"Scores: {'legal': 0.9999, 'illegal': 1.9998}"
dr5br851hdq5q1xgjz95jb7gdoo155inqwe0xgvs0o3oue a3do3s9cviqh2p0t4v mqfdjq7kdlnagabyk9zc1jy2yqubo 3y983yrxpdrb5gmh6500omakizibwo5ng4cyice52s8j 6fztousa3ox36ub8e916k5e2vrtq175i3xz3pay5h2bkshoamvnq16nruvz5lxg49pmvtepsla7q8iztkke2ni8ph9vda6n4p76yz4r90qyvmgjk6bjp6x1qyst1s3gcp6k461dw1kqcw8fcbxx5dxn19mbjt95ma2a1 kg8ygfgwj3wc6v9jip6akh t02vijv0nhrjsin9krhklp8zuuoua1n05mje035ihegyp6xottzcg9r0pq92ex9vqcfb 5 ygj22qrz12z1cf czu tu4viybqki4men5d82foag5y3yq30ru72chq8pudzpzgwsovtpgvv4zqmzdaccpwaralrgbgqssvsqpxfylcslnmln93bnrvmmjeiyzgv9o3zw43v1n0alh597kb 1f1-1217' ) ) ) order by 1#,1,0,"Scores: {'legal': 1.9997, 'illegal': 0.9999}"
SELECT * FROM swept FETCH FIRST 50 PERCENT ROWS ONLY,0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT INSTR ( CustomerName, ""a"" ) FROM Customers;",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT column_name ( s ) FROM operation,private",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT DEGREES ( 1.5 ) ;,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9986}"
"SELECT column_name ( s ) FROM vapor,name",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT intcol, charcol FROM TBLV0100.manytypes_ctrl WHERE intcol in ( SELECT t1.intcol FROM ((((TBLV0100.mtypes_1 T1 FULL JOIN TBLV0100.mtypes_2 T2 ON T1.charcol = T2.vcharcol AND T1.intcol = T2.dec62col) FULL JOIN (TBLV0100.mtypes_2 T4 FULL JOIN TBLV0100.mtypes_1 T3 ON T4.smintcol = T3.dec62col) ON T1.intcol = T4.intcol AND T2.charcol = T3.charcol) FULL JOIN ((TBLV0100.mtypes_1 T5 FULL JOIN TBLV0100.mtypes_2 T6 ON T5.charcol = T6.vcharcol AND T5.intcol = T6.dec62col) FULL JOIN (TBLV0100.mtypes_2 T7 FULL JOIN TBLV0100.mtypes_1 T8 ON T7.smintcol = T8.dec62col) ON T5.intcol = T8.dec62col AND T6.charcol = T7.charcol) ON T5.dec62col = T1.dec62col AND T5.intcol = T3.intcol) FULL JOIN (((TBLV0100.mtypes_1 T9 FULL JOIN TBLV0100.mtypes_2 T10 ON T9.charcol = T10.vcharcol AND T9.intcol = T10.dec62col) FULL JOIN (TBLV0100.mtypes_2 T12 FULL JOIN TBLV0100.mtypes_1 T11 ON T12.smintcol = T11.dec62col) ON T9.intcol = T12.intcol AND T10.charcol = T11.charcol) FULL JOIN ((TBLV0100.mtypes_1 T13 FULL JOIN TBLV0100.mtypes_2 T14 ON T13.charcol = T14.vcharcol AND T13.intcol = T14.dec62col) FULL JOIN (TBLV0100.mtypes_2 T15 FULL JOIN TBLV0100.mtypes_1 T16 ON T15.smintcol = T16.dec62col) ON T13.intcol = T16.dec62col AND T14.charcol = T15.charcol) ON T13.dec62col = T9.dec62col AND T13.intcol = T11.intcol) ON T12.dec62col = T2.dec62col AND T14.intcol = T8.intcol) FULL JOIN ((((TBLV0100.mtypes_1 T17 FULL JOIN TBLV0100.mtypes_2 T18 ON T17.charcol = T18.vcharcol AND T17.intcol = T18.dec62col) FULL JOIN (TBLV0100.mtypes_2 T20 FULL JOIN TBLV0100.mtypes_1 T19 ON T20.smintcol = T19.dec62col) ON T17.intcol = T20.intcol AND T18.charcol = T19.charcol) FULL JOIN ((TBLV0100.mtypes_1 T21 FULL JOIN TBLV0100.mtypes_2 T22 ON T21.charcol = T22.vcharcol AND T21.intcol = T22.dec62col) FULL JOIN (TBLV0100.mtypes_2 T23 FULL JOIN TBLV0100.mtypes_1 T24 ON T23.smintcol = T24.dec62col) ON T21.intcol = T24.dec62col AND T22.charcol = T23.charcol) ON T21.dec62col = T17.dec62col AND T21.intcol = T19.intcol) FULL JOIN (((TBLV0100.mtypes_1 T25 FULL JOIN TBLV0100.mtypes_2 T26 ON T25.charcol = T26.vcharcol AND T25.intcol = T26.dec62col) FULL JOIN (TBLV0100.mtypes_2 T28 FULL JOIN TBLV0100.mtypes_1 T27 ON T28.smintcol = T27.dec62col) ON T25.intcol = T28.intcol AND T26.charcol = T27.charcol) FULL JOIN (TBLV0100.mtypes_1 T29 FULL JOIN TBLV0100.mtypes_2 T30 ON T29.charcol = T30.vcharcol AND T29.intcol = T30.dec62col) ON T29.dec62col = T25.dec62col AND T29.intcol = T27.intcol) ON T28.dec62col = T18.dec62col AND T30.intcol = T24.intcol) ON T28.dec62col = T2.dec62col AND T30.intcol = T14.intcol) ORDER BY 1",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
CREATE OR REPLACE FUNCTION lookup_letter(text) RETURNS SETOF text AS $$ BEGIN RETURN QUERY EXECUTE ' EXPLAIN SELECT letter FROM sample WHERE letter = ''' || $1 || '''',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"a2(numEmpsTakenDB) := select count(distinct T.eID) from dbCourse D, takes T where D.cID = T.cID",0,1,"Scores: {'legal': 0.9995, 'illegal': 1.9989}"
"INSERT INTO TEST SELECT X, MOD(X, 5), RAND()*100 FROM SYSTEM_RANGE(1, 1000)",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
alter system flush shared_pool,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9999}"
INSERT INTO lockdemo VALUES (1),0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9997}"
"insert into account (account_id, product_cd, cust_id, open_date, last_activity_date, status, open_branch_id, open_emp_id, avail_balance, pending_balance) select null, a.prod_cd, c.cust_id, a.open_date, a.last_date, 'ACTIVE', e.branch_id, e.emp_id, a.avail, a.pend from customer c cross join (select b.branch_id, e.emp_id from branch b inner join employee e on e.assigned_branch_id = b.branch_id where b.city = 'Waltham' limit 1) e cross join (select 'CHK' prod_cd, '2003-09-12' open_date, '2005-01-03' last_date, 534.12 avail, 534.12 pend union all select 'SAV' prod_cd, '2000-01-15' open_date, '2004-10-24' last_date, 767.77 avail, 767.77 pend union all select 'MM' prod_cd, '2004-09-30' open_date, '2004-11-11' last_date, 5487.09 avail, 5487.09 pend) a where c.fed_id = '444-44-4444'",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
sqlattempt1,1,0,"Scores: {'legal': 2.9899, 'illegal': 0.0000}"
end,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9987}"
SELECT * FROM mountain WHERE consist BETWEEN '1996-07-01' AND '1996-07-31',0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"select (round(avg(total/bocche), 2)), trade from catasto where series = 1 and total <> 0 and sex = 1 group by trade",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
"call regexp_substring ( repeat ( right ( char ( 3702 ) ,0 ) ,500000000 ) ,null ) ) /*At the point in time that The Lady from Shanghai was being made, the marriage of Orson Welles and Rita Hayworth wa*/+'",1,0,"Scores: {'legal': 1.9993, 'illegal': 0.9996}"
DELETE FROM lockdemo WHERE col = 1,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9988}"
"For Urban Cowboy John Travolta plays one of the stronger alpha males ever portrayed on the big screen. He's a decent enough young kid who leaves his parent's homestead and strikes out for the big city of Dallas where his uncle Barry Corbin has promised to find him work in the petrochemical industry. In 1980 that was beginning to boom and Texas was definitely a growing place in the USA.<br /><br />Travolta does a good job in making we the audience care about his character who when you come right down to it is a sexist pig. He meets and marries Debra Winger who's from the same background, but she's got some ideas that women should not be shadows of their men. And when she beats him at Gilley's mechanical bu""1 ) as pyjx where 9005 = 9005",1,0,"Scores: {'legal': 1.9997, 'illegal': 0.9999}"
"select pg_sleep ( 5 ) and ( ( ""byhx"" li/*Mardi Gras: Made in China provides a wonderful, intricate connection between popular culture, nudity, and globalization through the making and tossing of beads. I saw this film at the International Film Festival of Boston, and was expecting a dry introduction to globalization, but what I got was a riveting visual display of shocking footage from both China and the United States. The eye-opening film is humorous, in-depth, serious, non-patronizing, and it leaves you wanting more as the credits role. It is worth comparing to Murderball -- it's simply that well done. The young women workers in China have various points of view, and the owner is amazingly open about the discipline. The revelers */ke ""byhx",1,0,"Scores: {'legal': 2.9994, 'illegal': 0.0000}"
"This movie has been a favorite of mine and is entwined with the Christmas Holidays for me for two reasons: (1) growing up in the 1960s, everything was space-rela",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"WITH letter (letter, count) AS ( SELECT letter, COUNT(*) FROM sample GROUP BY 1 ) SELECT letter AS l, count, (SELECT * FROM lookup_letter(letter) AS l2 LIMIT 1) AS lookup_letter FROM letter ORDER BY 2 DESC",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9992}"
SELECT pg_sleep(0.600),0,1,"Scores: {'legal': 0.9995, 'illegal': 1.9983}"
SELECT * FROM excitement WHERE meat BETWEEN scientific09/01/1996above AND mix15/31/1996step,0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT * FROM magnet WHERE four LIKE '嚙緣%',0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"select distinct x.month, (select count(*) from purchase y where x.month=y.month) from purchase x;",0,1,"Scores: {'legal': 0.9998, 'illegal': 1.9996}"
SELECT TOP 3 * FROM CustomersWHERE Country = 'Germany';,0,1,"Scores: {'legal': 0.9973, 'illegal': 1.9927}"
"SELECT TBNN1201.old_offices.OLD_OFFICE, TBNN1201.old_offices.EMP_ID FROM (TBNN1201.old_offices T1 FULL JOIN TBNN1201.new_offices T2 ON T1.emp_id = T2.emp_id), (TBNN1201.old_offices T3 FULL JOIN TBNN1201.new_offices T4 ON T3.emp_id = T4.emp_id) WHERE T1.emp_id = T3.emp_id",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"CREATE FUNCTION sylph.add_software(char, char, char) RETURNS BIGINT AS ' SELECT sylph.add_post(''software'', $1, true, $2, $3)",0,1,"Scores: {'legal': 0.9996, 'illegal': 1.9990}"
SELECT SIN ( -1 ) ;,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9955}"
"select x.manufacturer, count(y.pid) from Product x left outer join Purchase y on x.pname = y.product group by x.manufacturer;",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9997}"
SELECT * FROM potatoes WHERE older BETWEEN '1996-07-01' AND '1996-07-31',0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"CREATE TABLE #T1 (SNO char(6), Shipping smallint CONSTRAINT PK#T1 PRIMARY KEY (SNO))",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9991}"
EXECUTE :task_cust_mv := 'cust_mv',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9973}"
"SELECT V1.SNO, Shipping + Used AS Total FROM V1 RIGHT OUTER JOIN V2 ON V1.SNO = V2.SNO",0,1,"Scores: {'legal': 0.9988, 'illegal': 1.9956}"
"SELECT soilID AS ID, muscle AS many FROM band",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT * FROM hurry WHERE scientific BETWEEN '1996-07-01' AND '1996-07-31',0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
SELECT * FROM #T1,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9915}"
"I would say 'Bride of Chucky' is a ""return to greatness"" but the series was never really great. Very good #1 was, #2-3 were throwaways, and I think this 4th installment is equal to or even better than the first movie. And it contains the best subtitle/tagline: ""Chucky Gets Lucky."" So he does, in the role of Jennifer Tilly, who thoroughly rejuvenated this series as Jeri Ryan did for 'Star Trek: Voyager.' Tilly didn't just create a presence; she added much needed humor, back-st",0,1,"Scores: {'legal': 0.9998, 'illegal': 1.9997}"
SELECT * FROM manner WHERE belt NOT LIKE '[written]%',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9935}"
"SELECT c.dept, c.number FROM Class c, Teaches t, Instructor i WHERE c.dept = t.dept AND c.number = t.number AND t.username = i.username AND i.username = 'zahorjan'",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9996}"
"select pnumber,pname,count(*) from project,works_on,employee where pnumber=pno and ssn=essn and dno=5 group by pnumber,pname; select dnumber,count(*) from department,employee where dnumber=dno and salary>40000 and dno in (select dno from employee group by dno having count(*)>5) group by dnumber;",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9991}"
"SELECT ABS(IFNULL((FLOAT(IFNULL(FLOAT(RECID),0))) / (IFNULL(FLOAT(FILENO)+1,0)),0)) FROM (SELECT A.RECID, B.FILENO, A.FLOAT4WDN, B.FLOAT8, A.FLOAT4NN, B.INTCOLWDN,A.VARCHAR20BIT,A.INTCOLNN,A.DEFNULL FROM VWKT2102 A, TBKT2102 B WHERE A.RECID = '001') AS TBK001 WHERE CASE WHEN ABS(IFNULL(123.00*2,0.00000)) = ABS(IFNULL(FLOAT4WDN,123.00*2.0)) THEN 1 WHEN ABS(IFNULL(REAL(123.0*2.0),0)) = ABS(IFNULL(INTEGER(FLOAT(1000)),0)) THEN 2 WHEN ABS(INTEGER((FLOAT4NN+1.0-2.)*.1)) >= ABS(INTEGER(INTCOLNN)) THEN 6 WHEN ABS(IFNULL(SMALLINT(RECID),0)) = ABS(IFNULL(INTCOLWDN,INTEGER(FILENO))) THEN 3 WHEN ABS(IFNULL(SMALLINT(RECID),0)) < ABS(IFNULL(INTCOLWDN,INTEGER(FILENO))) THEN 4 WHEN ABS(IFNULL(SMALLINT(RECID),0)) > ABS(IFNULL(INTCOLWDN,INTEGER(FILENO))) THEN 5 ELSE 7 END IN (0,1,2,3,4,5,6)",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9999}"
EXECUTE :workload_name := 'MYWORKLOAD',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9933}"
SELECT SYSDATE ( ) + 1;,0,1,"Scores: {'legal': 0.9981, 'illegal': 1.9970}"
EXECUTE :workload_name := 'MY_WORKLOAD',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9921}"
"CREATE TABLE #T2 (SNO char(6), Used smallint CONSTRAINT PK#T2 PRIMARY KEY (SNO))",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9981}"
END,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9987}"
"1"" union all sele/*Hmmm, a sports team is in a plane crash, gets stranded on a snowy mountain, and is faced with the difficult decision to eat the flesh of their dead companions in order to survive. Sound familiar anyone? I refer to ""Alive"" from 1993. The only major difference here, of course, is that a big, white, drunken scare crow of a Yeti shows up a few times to drag off the dead. I guess humans taste better than yaks.<br /><br*/ct null#",1,0,"Scores: {'legal': 2.9995, 'illegal': 0.0000}"
SELECT tower FROM four UNION ALL SELECT stop FROM allow ORDER BY memory,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9992}"
SELECT CASE WHEN COUNT(DISTINCT DOUBLE1) = 23 THEN 99999 WHEN COUNT(*) = 24 THEN 88888 WHEN COUNT(DISTINCT DOUBLE1) = 25 THEN 77777 ELSE 10000 END FROM TBIPR302,0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9998}"
"insert into account (account_id, product_cd, cust_id, open_date, last_activity_date, status, open_branch_id, open_emp_id, avail_balance, pending_balance) select null, a.prod_cd, c.cust_id, a.open_date, a.last_date, 'ACTIVE', e.branch_id, e.emp_id, a.avail, a.pend from customer c cross join (select b.branch_id, e.emp_id from branch b inner join employee e on e.assigned_branch_id = b.branch_id where b.city = 'Waltham' limit 1) e cross join (select 'CHK' prod_cd, '2003-07-30' open_date, '2004-12-15' last_date, 125.67 avail, 125.67 pend union all select 'MM' prod_cd, '2004-10-28' open_date, '2004-10-28' last_date, 9345.55 avail, 9845.55 pend union all select 'CD' prod_cd, '2004-06-30' open_date, '2004-06-30' last_date, 1500.00 avail, 1500.00 pend) a where c.fed_id = '999-99-9999'",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9995}"
SELECT MONTH ( CURDATE ( ) ) ;,0,1,"Scores: {'legal': 0.9972, 'illegal': 1.9965}"
"EXPLAIN SELECT sample2.id, sample2.junk FROM sample1 JOIN sample2 ON (sample1.id = sample2.id) ORDER BY 1 LIMIT 100",0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9998}"
<br /><br />Th,0,1,"Scores: {'legal': 0.9992, 'illegal': 1.9982}"
"SELECT IFNULL(FLOAT4WDN,FLOAT4WDN) FROM VWKT2102 WHERE ABS(FLOAT4WDN) = FLOAT4WDN",0,1,"Scores: {'legal': 0.9981, 'illegal': 1.9943}"
">""<img src=&{document.cookie=true;};>",1,0,"Scores: {'legal': 1.9989, 'illegal': 0.9993}"
SELECT ABS(ABS(ABS(ABS(ABS(ABS(ABS(ABS(ABS(-FLOAT4WDN))))))))) FROM VWKT2102 WHERE ABS(ABS(ABS(FLOAT4WDN))) = ABS(-FLOAT4WDN),0,1,"Scores: {'legal': 1.0000, 'illegal': 1.9993}"
"First of all, I really can't understand how some people ""enjoyed"" this movie. It's the worst thing I have ever seen. Even the actors seem to be bored...and I think that says it all!<br /><br />However, I have to give my applause to the opening credits creators - that team seems to have a really good future. That's why I recommend the big studios to watch ONLY the opening credits, and one or two spec",0,1,"Scores: {'legal': 0.9998, 'illegal': 1.9996}"
"select distinct x.month, (select count(*) from purchase y where x.month=y.month and price > 10.0) from purchase x where price > 10.0;",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9994}"
"SELECT TIME_TO_SEC ( ""00:00:05"" ) ;",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9955}"
EXECUTE DBMS_ADVISOR.CREATE_SQLWKLD(:name),0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT EMPNUM FROM VWEN4501 WHERE COUNTRY IN (SELECT COUNTRY FROM VWEN4501 V1 WHERE TOTSAL > 8000 AND V1.HIREAGE IN (SELECT MAX(HIREAGE) FROM VWEN4501 V2 WHERE V2.TOTSAL IS NOT NULL AND EMPNUM < 2000 GROUP BY HIREAGE HAVING COUNT(*) IN (2,3))) AND EMPNUM BETWEEN 2000 AND 3000 UNION ALL SELECT SERIALNO FROM VWEN4502 WHERE SERIALNO BETWEEN 2000 AND 3000 AND EMPLENGTH < ALL (SELECT V2.EMPLENGTH FROM VWEN4502 V2 WHERE EMPLENGTH BETWEEN 4000 AND 5000) UNION ALL SELECT SERIALNO FROM VWEN4502 WHERE EMPLENGTH *3 < (MONTHSAL/100) + EMPLENGTH AND EMPLENGTH BETWEEN 3000 AND 4000 ORDER BY 1",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9998}"
; drop table temp --,1,0,"Scores: {'legal': 2.9998, 'illegal': 0.0000}"
"4ap8 hsfiq9voiqsd51ffb59154p2687tbkg70ghqsm n2tlqzwpl2ppk1 hnd1 4gy3oq8xdt7zvzw0neu1ced3j24o0fm26ky6k4sudp kx9aixh9a6hwdzob9t8cn5ytues09w hoxhgc6dwdt0qgxozirw382qfj33dzurzjwaolm7xrdsllst9565r06645megh033l07zy s629nf7wk01o109fgelao h5ahr8qcea9xj 9rryi4494zrv7pkgkyigtuv9jbeb2rw3ggd81jn v22lcw91tleo k7jeqjbtty8jlqe6u6uralzsiz085wvtwvjoo6c53la842b2kq5t30z ut qk2zvsx xku8bxubquv4mw4kiufi23h8swcmpem5166kuesgqtzy26l6ngss8icw3eygz v5usff8o1hqa6myq0c3gwpdv ist25jiypxhqaoib2asdjyifphu3xah7t04fotemk1se9i8i pfuu90hdpm4j0cqm6 1hkzkpwo3kjh5rqrhf7mcrnku owxzma61ehlws6hnecgc9cwli4hcsw54qg25ek67t2ob 60i647xn7eyrqwbblfa2jcdmqccgjkeihmwc7e3wofn3cll5bauv2vsnkmzgfk62qmazbqx7mxbi3c7lm1q98172ddzobcga8k3 nqiowuw17jpst37yk95uetbxritigtb74b9af1d1cs1fee b9x1o14ln4rq8ugooos50o6wm9soa nvnn9w0nty3fba1yy7yh3ictz1vnq8wdw6hcb5red9edr7ff7p3ykal70krwmttu qoboomuh6bn947j9xf8a8z7ubgd2bp862e4qny4vivinqxk7wb fd0dqvnj3ezvf7sq5sauo0s6xwverhphdex0y6cmx4 r44tm3n0mj0u8d3t1%"" ) waitfor delay '0:0:5'--",1,0,"Scores: {'legal': 2.9958, 'illegal': 0.0000}"
EXECUTE :workload_name := 'MY_CACHE_WORKLOAD',0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9903}"
"CREATE FUNCTION sylph.add_news(char, char, char) RETURNS BIGINT AS ' SELECT sylph.add_post(''news'', $1, false, $2, $3)",0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9994}"
"SELECT virtualtransaction AS vxid, transactionid::text FROM pg_locks WHERE pid = pg_backend_pid() ORDER BY 1, 2 LIMIT 1",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9993}"
"Oh god, what a horrible, horrible film. Meant to be a comment on the state of society, it's just a reflection of the worst of the worst in reality TV. Interstitials hosted by Jason Jones and Don McKellar are the most obnoxious part, written in a tone that is perhaps meant to be reflexive and insightful. Rather, these moments are mind numbing as they speak to the camera with dialogue written by someone with a love for insulting, condescending speech that shoves the ""meaning"" of the film down the viewer's throat.<br /><br />Also, a point to would-be filmmakers: Long takes and quiet scenes do not equal art. Neither do extreme angles or logic stretched to the point of absurdity.<br /><br />If anyone out there is interested in watching this film, please don't. Seriously. Please. You have better things to do.' else dbms_lock.sleep ( 0 )",1,0,"Scores: {'legal': 2.9988, 'illegal': 0.0000}"
VARIABLE no_recs NUMBER,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9999}"
SELECT AVG ( storm ) FROM zulu SELECT SUM ( origin ),0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"LOOP FETCH curs INTO v_action, v_command, v_attr1, v_attr2, v_attr3, v_attr4",0,1,"Scores: {'legal': 0.9964, 'illegal': 1.9944}"
"SELECT appropriate, individual+ ', ' + already+ ' ' + movie+ ', ' + wheat AS together FROM nobody",0,1,"Scores: {'legal': 0.9999, 'illegal': 1.9999}"
"EXPLAIN SELECT TYPE, (SELECT VALUE FROM TEST T2 WHERE T.TYPE = T2.TYPE ORDER BY TYPE, VALUE LIMIT 1) MIN FROM (SELECT DISTINCT TYPE FROM TEST) T ORDER BY TYPE",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9905}"
"This bogus journey never comes close to matching the wit and craziness of the excellent adventure these guys took in their first movie. This installment tries to veer away from its prequel to capture some new blood out of the joke, but it takes a wrong turn and journeys nowhere interesting or funny.<br /><br />There's a",0,1,"Scores: {'legal': 0.9999, 'illegal': 1.9998}"
calle la salina 7 1?b,0,1,"Scores: {'legal': 0.9995, 'illegal': 1.9990}"
SELECT pg_sleep(0.300),0,1,"Scores: {'legal': 0.9997, 'illegal': 1.9972}"
"1;select count(*) from generate_series(1,5000000)--",1,0,"Scores: {'legal': 2.9993, 'illegal': 0.0000}"
"SELECT guardID AS ID, statement AS ride FROM upward",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"INSERT INTO TEST SELECT X FROM SYSTEM_RANGE(1, 1000)",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9993}"
"SELECT COALESCE(#T2.SNO,#T1.SNO) AS SNO, COALESCE(Shipping,0) + COALESCE(Used,0) AS Total FROM #T1 FULL OUTER JOIN #T2 ON #T1.SNO = #T2.SNO",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9989}"
"SELECT suitID AS ID, nervous AS store FROM crop",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"SELECT * FROM five WHERE dirty IN ( 'village', 'plane', 'industry' )",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"This is the best comedy period. It is so underrated! Clever witty humor, Great casting! Jerry Stiller is the jewel in the show, he is so incredibly funny and quirky, simply a comical genius! Doug and Carrie have great chemistry! I so do not see what the hype is about when it comes to Everybody loves Raymond it is SO overrated with lame jokes mostly forced humor and just not the witty show, I can't remember laughing in more than 1 episode. King of Queens is a rare comedy that has all the right ingredients to give you serious belly laughs which is normally caused by Arthur Spooner, I think its about time this comedy gets the hype it deserves and not the lame Raymond & CO.",0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9992}"
"SELECT * FROM fat WHERE practice IN ( 'fifteen', 'wall', 'ear' )",0,1,"Scores: {'legal': 1.0000, 'illegal': 2.0000}"
"I'm easily entertained. I enjoyed """,0,1,"Scores: {'legal': 0.0000, 'illegal': 2.9946}"
